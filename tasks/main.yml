- name: Ensure we have support for the provider(s) specified
  connection: local
  fail: msg="I don't know how to setup email on {{ provider }}."
  when: "'{{ provider }}' not in ['aws', 'digitalocean']"

- name: Ensure that we have API keys defined for providers
  connection: local
  debug: msg=TODO

- name: Work out whether we already have servers in inventory or have to create
  connection: local
  debug: msg=TODO

- name: Ensure we have an SSH key to enable access
  connection: local
  digital_ocean_sshkey:
    state: present
    name: email_ssh_key
    ssh_pub_key: 'ssh-rsa AAAA...'
    #client_id: XXX
    api_key: "{{ digital_ocean_token }}"
  register: email_ssh_key

- name: Print out SSH key details
  connection: local
  debug: msg="{{ email_ssh_key }}"

- name: Ensure that the VM(s) are present on provider infrastructure
  connection: local
  digital_ocean:
    state: present
    command: droplet
    name: email
    api_token: "{{ digital_ocean_token }}"
    size_id: 2gb
    region_id: nyc3
    image_id: ubuntu-16-04-x64
    wait_timeout: 500
  register: email_droplet

- name: Print out droplet details
  connection: local
  debug: msg="{{ email_droplet }}"

- name: Add tags to droplet
  debug: msg=TODO

- name: Add Email instance to host inventory group
  connection: local
  add_host: hostname={{ item.ip_address }} groupname=email ansible_ssh_user=ubuntu ansible_ssh_private_key_file="email.key"
  with_items:
    - "{{ email_droplet.droplet }}"
